const { includes, set } = require("lodash")
const moment = require("moment")

const users = [
    {
        name: "Ashwin J",
        age: 24,
        gender: "male",
        location: "Chennai",
        id: "1"
    },
    {
        name: "Test",
        age: 24,
        gender: "male",
        location: "Goa",
        id: "2"
    },
    {
        name: "Ash",
        age: 14,
        gender: "male",
        location: "Madurai",
        id: "3"
    },
]
const movies = [
    {
        id: "11",
        name: "Gladiator",
        rating: 5,
        releaseDate: '2000-10-19T00:00:00.000Z',
        isBlockBuster: true
    },
    {
        id: "12",
        name: "Inception",
        rating: 3,
        releaseDate: '2010-11-15T00:00:00.000Z',
        isBlockBuster: true
    },
    {
        id: "13",
        name: "Smile",
        rating: 4,
        releaseDate: '2029-10-09T00:00:00.000Z',
        isBlockBuster: false
    },
]
const comments = [
    {
        userId: "1",
        text: "Gladiator for the Oscar",
        movieId: "11",
    },
    {
        userId: "1",
        text: "Overall it's a scary movie",
        movieId: "13",
    },
    {
        userId: "3",
        text: "Flop Movie",
        movieId: "13",
    },
    {
        userId: "1",
        text: "Gladiator...",
        movieId: "11",
    },
]

//MOVIES WHICH RECEIVED  NO COMMENTS...
var movieIdFromComments=comments.map(num=>num.movieId)
console.log(movieIdFromComments)
var moviesDetailsWithNoComments=movies.filter(num=>{
    if(!(movieIdFromComments.includes(num.id)))
    {
        return num.id;
    }
}
)
console.log(moviesDetailsWithNoComments)

//MOVIES WHICH RECEIVED COMMENTS.
var movieIdFromComments=comments.map(num=>num.movieId)
console.log(movieIdFromComments)
var movieDetailsWithComments=movies.filter(num=>{
    if((movieIdFromComments.includes(num.id)))
    {
        return num.id;
    }
}
)
console.log(movieDetailsWithComments)


//GETTING THE USER ID AND THE MOVIE ID
arr=[]
var moviesCommentedByUsers=comments.map(comments=>{
    var myusers = users.filter(user => user.id === comments.userId);
 
    console.log(myusers)
    var mymovies=movies.filter(movie=> movie.id === comments.movieId)

    return{
        name:myusers[0].name, 
        movies:mymovies[0].name
    }
}).reduce((prev,cur)=>{
     if(!prev[cur.name])
       {
             prev[cur.name]=cur.movies
         }
         else{       
            prev[cur.name]=prev[cur.name]+" "+cur.movies;   
         }
         return prev
 },{})
console.log(moviesCommentedByUsers)

var UserId=comments.map((comment)=>comment.userId);
console.log(UserId)
var uniqueUserId=[...new Set(UserId)]
console.log(uniqueUserId)

var movieId=comments.map((comment)=>comment.movieId)
console.log(movieId)
var uniqueMovieId=[...new Set(movieId)]
console.log(uniqueMovieId)

var userMap=users.map(user=>{
    var obj={id:user.id}
    if((uniqueUserId).includes(user.id))
    {
        obj={...obj,name:user.name}
        return obj;
    }
}).filter(user=>user!==undefined)
console.log("this is my usermap")
console.log(userMap)

// console.log("djcbjdcbjfc")

var movieMap=movies.map(movies=>{
    if((uniqueMovieId).includes(movies.id))
    {
        return{
            id:movies.id,
            name:movies.name
        }
    }
}).filter(user=>user!==undefined)
console.log(movieMap)
// const result3 = Object.groupBy(movieMap, ({ id }) => id);
// console.log("dbbhciohefrioc")
// console.log(result3)



const final=[]

var usersWithComments=comments.map(comment=>
{
   var commentNames=userMap.find(user=>user.id===comment.userId)
   var commentMovies=movieMap.find(movie=>movie.id===comment.movieId)
   return{
    names:commentNames.name,
    movies:commentMovies.name
   }
}
)
console.log(usersWithComments)

const result = Object.groupBy(usersWithComments, ({ names }) => names);
console.log(result)































// const d=new Date(movies[0].releaseDate);
// let yr=d.getFullYear();
// console.log(yr)

// var moviesWithReleaseYear=movies.filter((movies)=>
// {
//     const movieReleaseDate=new Date(movies.releaseDate)
//     const year=movieReleaseDate.getFullYear();
//     if(year>2005)
//     {
//         return movies;
//     }
// })
// console.log(moviesWithReleaseYear)

// var moviesWithComments=comments.map(comments=>
//     {
//     var movieDetails=moviesWithReleaseYear.find((movies)=>comments.movieId===movies.id)
//     if(movieDetails!==undefined)
//     {
//     return {
//              name:movieDetails.name,
//              text:comments.text
//      }
//     }
// }  
// ).filter((value)=>value!==undefined)
// console.log(moviesWithComments)


// //LIST OF USERS AND THE MOVIES THEY COMMENTED...
// var commentMovies=comments.map(comment=>
// {
//     var details=comments.find(comment=>comment.userId===users.id)
//     return details
   
// }
// )
// console.log(commentMovies)







var moviesWithComments=comments.map(comments=>
{
    var movieName=movies.find(movies=>movies.id===comments.movieId)
    return 
    {
        name:movieName,
        
    }
}
).filter((movies)=>
    {
        const movieReleaseDate=new Date(movies.releaseDate)
        const year=movieReleaseDate.getFullYear();
        if(year>2005)
        {
            return movies;
        }
    }
).map(movies=>{
    return{
        name
    }
})
{
    

})
console.log("the solution is:")
console.log(moviesWithComments)




var userWithMovies=movies.map(users=>{
    var commentedUsers=comments.filter(comments=>comments.movieId===users.id)
  return commentedUsers
})
console.log(userWithMovies)

var myUsers=comments.map(comment=>
{
    var solution=users.find(users=>users.id===comment.userId)
    var solution2=movies.find(movies=>movies.id===comment.movieId)
    return{
        username:solution.name,
        id:solution.id,
        moviename:solution2.name
    }
    }
).reduce((prev,cur)=>{
    if( !prev[cur.username])
    {
        prev[cur.username]={name:cur.username,movies:[]}
    }
    if (!prev[cur.username].movies.includes(cur.moviename)) {
        prev[cur.username].movies.push(cur.moviename);
      }
    
      return prev;
    }, {});
    const result = Object.values(myUsers);

    const res=users.map(user=>{
        const details=result.find(res=>res.name===user.name)
        if(details)
        {
        return{
            name:user.name,
            movie:details.movies
        }}
        else{
            return{
                name:user.name,
                movie:'no movie has been commented'
            }
        }
    })
console.log(res)

